const express = require('express');
const app = express();
const port = 3000;

const userRouter = require('./routes/users')

// 全局app级别中间件
// function log_middleware(req, res, next) {
//   console.log('请求来了……')
//   next()
// }

// app.use(log_middleware)

/**
 * express.static内置中间件，托管静态文件
 * 添加了static虚拟路径前缀
 */
app.use('/static', express.static('public'))

app.use('/user', userRouter)

// 中间件
// function middleware(err, req, res, next) {
  // 1.处理异常
  // 2、处理业务功能，然后转交控制权-----next
  // 3、响应请求---结束响应----->当做路由的处理函数

// }

/**
 * /test?name=123
 */
// function valid_middleware(req, res, next) {
//   let { name } = req.query
//   if(!name) {
//     res.json({
//       message: '缺少name参数'
//     })
//   } else {
//     next()
//   }
// }

// 1
// app.all('*', valid_middleware)

// 2
app.get('/test', (req, res) => {
  res.json({
    message: 'test'
  })
})

app.listen(port, () => {
  console.log(`app listening on port ${port}`)
})

module.exports = app;
